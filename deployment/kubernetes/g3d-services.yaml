apiVersion: v1
kind: Namespace
metadata:
  name: g3d-ai-services
  labels:
    name: g3d-ai-services
    version: "1.0.0"

---
# ConfigMap for shared configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: g3d-config
  namespace: g3d-ai-services
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  CORS_ORIGINS: "https://g3d.ai,https://app.g3d.ai,https://admin.g3d.ai"
  RATE_LIMIT_WINDOW: "900000"
  RATE_LIMIT_MAX: "1000"
  HEALTH_CHECK_INTERVAL: "30000"
  REQUEST_TIMEOUT: "30000"
  REDIS_URL: "redis://redis-service:6379"
  MONGODB_URL: "mongodb://mongodb-service:27017/g3d-ai-services"
  ELASTICSEARCH_URL: "http://elasticsearch-service:9200"

---
# Secrets for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: g3d-secrets
  namespace: g3d-ai-services
type: Opaque
data:
  JWT_SECRET: "Z3NkLWFpLXNlcnZpY2VzLWp3dC1zZWNyZXQtMjAyNA=="
  JWT_REFRESH_SECRET: "Z3NkLWFpLXNlcnZpY2VzLXJlZnJlc2gtc2VjcmV0LTIwMjQ="
  OPENAI_API_KEY: "c2stcHJvai1YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWA=="
  ANTHROPIC_API_KEY: "c2stYW50LVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhY"
  STRIPE_SECRET_KEY: "c2tfbGl2ZV9YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhY"
  AWS_ACCESS_KEY_ID: "QUtJQVhYWFhYWFhYWFhYWFhYWFhYWA=="
  AWS_SECRET_ACCESS_KEY: "WFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhY"

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: g3d-ai-services
  labels:
    app: api-gateway
    tier: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        tier: gateway
    spec:
      containers:
      - name: api-gateway
        image: g3d/api-gateway:latest
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Vision Pro Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vision-pro
  namespace: g3d-ai-services
  labels:
    app: vision-pro
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vision-pro
  template:
    metadata:
      labels:
        app: vision-pro
        tier: service
    spec:
      containers:
      - name: vision-pro
        image: g3d/vision-pro:latest
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: SERVICE_NAME
          value: "vision-pro"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 15

---
# CodeForge Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codeforge
  namespace: g3d-ai-services
  labels:
    app: codeforge
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: codeforge
  template:
    metadata:
      labels:
        app: codeforge
        tier: service
    spec:
      containers:
      - name: codeforge
        image: g3d/codeforge:latest
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          value: "3002"
        - name: SERVICE_NAME
          value: "codeforge"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 45
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 20
          periodSeconds: 10

---
# Creative Studio Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: creative-studio
  namespace: g3d-ai-services
  labels:
    app: creative-studio
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: creative-studio
  template:
    metadata:
      labels:
        app: creative-studio
        tier: service
    spec:
      containers:
      - name: creative-studio
        image: g3d/creative-studio:latest
        ports:
        - containerPort: 3003
        env:
        - name: PORT
          value: "3003"
        - name: SERVICE_NAME
          value: "creative-studio"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 60
          periodSeconds: 30

---
# DataForge Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataforge
  namespace: g3d-ai-services
  labels:
    app: dataforge
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dataforge
  template:
    metadata:
      labels:
        app: dataforge
        tier: service
    spec:
      containers:
      - name: dataforge
        image: g3d/dataforge:latest
        ports:
        - containerPort: 3004
        env:
        - name: PORT
          value: "3004"
        - name: SERVICE_NAME
          value: "dataforge"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 45
          periodSeconds: 20

---
# SecureAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secureai
  namespace: g3d-ai-services
  labels:
    app: secureai
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: secureai
  template:
    metadata:
      labels:
        app: secureai
        tier: service
    spec:
      containers:
      - name: secureai
        image: g3d/secureai:latest
        ports:
        - containerPort: 3005
        env:
        - name: PORT
          value: "3005"
        - name: SERVICE_NAME
          value: "secureai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 15

---
# AutoML Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: automl
  namespace: g3d-ai-services
  labels:
    app: automl
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: automl
  template:
    metadata:
      labels:
        app: automl
        tier: service
    spec:
      containers:
      - name: automl
        image: g3d/automl:latest
        ports:
        - containerPort: 3006
        env:
        - name: PORT
          value: "3006"
        - name: SERVICE_NAME
          value: "automl"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 90
          periodSeconds: 30

---
# ChatBuilder Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbuilder
  namespace: g3d-ai-services
  labels:
    app: chatbuilder
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chatbuilder
  template:
    metadata:
      labels:
        app: chatbuilder
        tier: service
    spec:
      containers:
      - name: chatbuilder
        image: g3d/chatbuilder:latest
        ports:
        - containerPort: 3007
        env:
        - name: PORT
          value: "3007"
        - name: SERVICE_NAME
          value: "chatbuilder"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3007
          initialDelaySeconds: 30
          periodSeconds: 15

---
# VideoAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: videoai
  namespace: g3d-ai-services
  labels:
    app: videoai
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: videoai
  template:
    metadata:
      labels:
        app: videoai
        tier: service
    spec:
      containers:
      - name: videoai
        image: g3d/videoai:latest
        ports:
        - containerPort: 3008
        env:
        - name: PORT
          value: "3008"
        - name: SERVICE_NAME
          value: "videoai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "3Gi"
            cpu: "1500m"
            nvidia.com/gpu: 1
          limits:
            memory: "6Gi"
            cpu: "3000m"
            nvidia.com/gpu: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 3008
          initialDelaySeconds: 120
          periodSeconds: 60

---
# FinanceAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: financeai
  namespace: g3d-ai-services
  labels:
    app: financeai
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: financeai
  template:
    metadata:
      labels:
        app: financeai
        tier: service
    spec:
      containers:
      - name: financeai
        image: g3d/financeai:latest
        ports:
        - containerPort: 3009
        env:
        - name: PORT
          value: "3009"
        - name: SERVICE_NAME
          value: "financeai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3009
          initialDelaySeconds: 30
          periodSeconds: 15

---
# HealthAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthai
  namespace: g3d-ai-services
  labels:
    app: healthai
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthai
  template:
    metadata:
      labels:
        app: healthai
        tier: service
    spec:
      containers:
      - name: healthai
        image: g3d/healthai:latest
        ports:
        - containerPort: 3010
        env:
        - name: PORT
          value: "3010"
        - name: SERVICE_NAME
          value: "healthai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3010
          initialDelaySeconds: 45
          periodSeconds: 20

---
# VoiceAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voiceai
  namespace: g3d-ai-services
  labels:
    app: voiceai
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: voiceai
  template:
    metadata:
      labels:
        app: voiceai
        tier: service
    spec:
      containers:
      - name: voiceai
        image: g3d/voiceai:latest
        ports:
        - containerPort: 3011
        env:
        - name: PORT
          value: "3011"
        - name: SERVICE_NAME
          value: "voiceai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3011
          initialDelaySeconds: 60
          periodSeconds: 30

---
# TranslateAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: translateai
  namespace: g3d-ai-services
  labels:
    app: translateai
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: translateai
  template:
    metadata:
      labels:
        app: translateai
        tier: service
    spec:
      containers:
      - name: translateai
        image: g3d/translateai:latest
        ports:
        - containerPort: 3012
        env:
        - name: PORT
          value: "3012"
        - name: SERVICE_NAME
          value: "translateai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3012
          initialDelaySeconds: 30
          periodSeconds: 15

---
# DocuMind Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: documind
  namespace: g3d-ai-services
  labels:
    app: documind
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: documind
  template:
    metadata:
      labels:
        app: documind
        tier: service
    spec:
      containers:
      - name: documind
        image: g3d/documind:latest
        ports:
        - containerPort: 3013
        env:
        - name: PORT
          value: "3013"
        - name: SERVICE_NAME
          value: "documind"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3013
          initialDelaySeconds: 60
          periodSeconds: 30

---
# Mesh3D Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mesh3d
  namespace: g3d-ai-services
  labels:
    app: mesh3d
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mesh3d
  template:
    metadata:
      labels:
        app: mesh3d
        tier: service
    spec:
      containers:
      - name: mesh3d
        image: g3d/mesh3d:latest
        ports:
        - containerPort: 3014
        env:
        - name: PORT
          value: "3014"
        - name: SERVICE_NAME
          value: "mesh3d"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 3014
          initialDelaySeconds: 90
          periodSeconds: 45

---
# EdgeAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgeai
  namespace: g3d-ai-services
  labels:
    app: edgeai
    tier: service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: edgeai
  template:
    metadata:
      labels:
        app: edgeai
        tier: service
    spec:
      containers:
      - name: edgeai
        image: g3d/edgeai:latest
        ports:
        - containerPort: 3015
        env:
        - name: PORT
          value: "3015"
        - name: SERVICE_NAME
          value: "edgeai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3015
          initialDelaySeconds: 30
          periodSeconds: 15

---
# LegalAI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: legalai
  namespace: g3d-ai-services
  labels:
    app: legalai
    tier: service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: legalai
  template:
    metadata:
      labels:
        app: legalai
        tier: service
    spec:
      containers:
      - name: legalai
        image: g3d/legalai:latest
        ports:
        - containerPort: 3016
        env:
        - name: PORT
          value: "3016"
        - name: SERVICE_NAME
          value: "legalai"
        envFrom:
        - configMapRef:
            name: g3d-config
        - secretRef:
            name: g3d-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3016
          initialDelaySeconds: 45
          periodSeconds: 20

---
# Load Balancer Services
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: g3d-ai-services
  labels:
    app: api-gateway
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  selector:
    app: api-gateway

---
# Internal Services for each AI service
apiVersion: v1
kind: Service
metadata:
  name: vision-pro-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3001
    targetPort: 3001
  selector:
    app: vision-pro

---
apiVersion: v1
kind: Service
metadata:
  name: codeforge-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3002
    targetPort: 3002
  selector:
    app: codeforge

---
apiVersion: v1
kind: Service
metadata:
  name: creative-studio-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3003
    targetPort: 3003
  selector:
    app: creative-studio

---
apiVersion: v1
kind: Service
metadata:
  name: dataforge-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3004
    targetPort: 3004
  selector:
    app: dataforge

---
apiVersion: v1
kind: Service
metadata:
  name: secureai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3005
    targetPort: 3005
  selector:
    app: secureai

---
apiVersion: v1
kind: Service
metadata:
  name: automl-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3006
    targetPort: 3006
  selector:
    app: automl

---
apiVersion: v1
kind: Service
metadata:
  name: chatbuilder-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3007
    targetPort: 3007
  selector:
    app: chatbuilder

---
apiVersion: v1
kind: Service
metadata:
  name: videoai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3008
    targetPort: 3008
  selector:
    app: videoai

---
apiVersion: v1
kind: Service
metadata:
  name: financeai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3009
    targetPort: 3009
  selector:
    app: financeai

---
apiVersion: v1
kind: Service
metadata:
  name: healthai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3010
    targetPort: 3010
  selector:
    app: healthai

---
apiVersion: v1
kind: Service
metadata:
  name: voiceai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3011
    targetPort: 3011
  selector:
    app: voiceai

---
apiVersion: v1
kind: Service
metadata:
  name: translateai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3012
    targetPort: 3012
  selector:
    app: translateai

---
apiVersion: v1
kind: Service
metadata:
  name: documind-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3013
    targetPort: 3013
  selector:
    app: documind

---
apiVersion: v1
kind: Service
metadata:
  name: mesh3d-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3014
    targetPort: 3014
  selector:
    app: mesh3d

---
apiVersion: v1
kind: Service
metadata:
  name: edgeai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3015
    targetPort: 3015
  selector:
    app: edgeai

---
apiVersion: v1
kind: Service
metadata:
  name: legalai-service
  namespace: g3d-ai-services
spec:
  ports:
  - port: 3016
    targetPort: 3016
  selector:
    app: legalai

---
# Horizontal Pod Autoscaler for API Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: g3d-ai-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# HPA for high-traffic services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: codeforge-hpa
  namespace: g3d-ai-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: codeforge
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chatbuilder-hpa
  namespace: g3d-ai-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chatbuilder
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: translateai-hpa
  namespace: g3d-ai-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: translateai
  minReplicas: 3
  maxReplicas: 12
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70