[tool.poetry]
name = "annotateai"
version = "1.0.0"
description = "Advanced AI-powered annotation platform"
authors = ["AnnotateAI Team"]
readme = "README.md"
packages = [{include = "annotateai", from = "ai-platforms/annotateai/src"}]

[tool.poetry.dependencies]
python = "^3.9"

# Core web framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
websockets = "^12.0"
pydantic = "^2.5.0"
python-multipart = "^0.0.6"

# Database and ORM
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
pymongo = "^4.6.0"

# Machine Learning - Core
torch = "^2.1.1"
torchvision = "^0.16.1"
torchaudio = "^2.1.1"
numpy = "^1.24.0"
scipy = "^1.11.0"
scikit-learn = "^1.3.0"
pandas = "^2.1.0"

# Computer Vision
opencv-python = "^4.8.1"
pillow = "^10.1.0"
imageio = "^2.33.0"
scikit-image = "^0.22.0"
albumentations = "^1.3.1"
imgaug = "^0.4.0"

# AI Models and Libraries
ultralytics = "^8.0.206"
transformers = "^4.36.0"
diffusers = "^0.24.0"
accelerate = "^0.25.0"
segment-anything = {git = "https://github.com/facebookresearch/segment-anything.git"}
timm = "^0.9.12"
clip-by-openai = "^1.0"

# 3D Processing
open3d = "^0.18.0"
trimesh = "^4.0.0"
pymeshlab = "^2023.12"
pyvista = "^0.43.0"
meshio = "^5.3.4"

# Video Processing
moviepy = "^1.0.3"
decord = "^0.6.0"
ffmpeg-python = "^0.2.0"

# Audio Processing
librosa = "^0.10.1"
soundfile = "^0.12.1"
whisper = {git = "https://github.com/openai/whisper.git"}
speech-recognition = "^3.10.0"
pyttsx3 = "^2.90"

# XR and Spatial Computing
mediapipe = "^0.10.8"
numpy-quaternion = "^2023.0.3"
aiortc = "^1.6.0"

# Distributed Computing and Training
ray = {extras = ["default", "tune"], version = "^2.8.0"}
mlflow = "^2.8.1"
optuna = "^3.5.0"
wandb = "^0.16.0"
horovod = "^0.28.1"

# Data Processing
apache-airflow = "^2.8.0"
celery = "^5.3.4"
rq = "^1.15.1"
dask = {extras = ["complete"], version = "^2023.12.0"}
great-expectations = "^0.18.8"

# Monitoring and Observability
prometheus-client = "^0.19.0"
datadog = "^0.48.0"
newrelic = "^9.4.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-exporter-jaeger = "^1.21.0"
psutil = "^5.9.6"
gputil = "^1.4.0"

# Cloud and Infrastructure
boto3 = "^1.34.0"
google-cloud-storage = "^2.10.0"
azure-storage-blob = "^12.19.0"
kubernetes = "^28.1.0"
docker = "^6.1.3"

# CDN and Optimization
cloudflare = "^2.11.1"
tinify = "^1.6.0"
brotli = "^1.1.0"
zstandard = "^0.22.0"

# Security and Authentication
cryptography = "^41.0.7"
pyjwt = "^2.8.0"
bcrypt = "^4.1.2"
python3-saml = "^1.15.0"
authlib = "^1.2.1"

# API and Integration
httpx = "^0.25.2"
aiohttp = "^3.9.1"
requests = "^2.31.0"
websocket-client = "^1.6.4"

# Data Formats and Serialization
h5py = "^3.10.0"
zarr = "^2.16.3"
pyarrow = "^14.0.1"
avro = "^1.11.3"
protobuf = "^4.25.1"

# Scientific Computing Extensions
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
plotly = "^5.17.0"
jupyter = "^1.0.0"
ipywidgets = "^8.1.1"

# Medical Imaging (Optional)
pydicom = "^2.4.3"
nibabel = "^5.2.0"
simpleitk = "^2.3.1"

# Rate Limiting and Security
slowapi = "^0.1.9"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

# Utilities
python-dotenv = "^1.0.0"
pyyaml = "^6.0.1"
click = "^8.1.7"
rich = "^13.7.0"
typer = "^0.9.0"
tqdm = "^4.66.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
jupyter = "^1.0.0"
ipython = "^8.18.1"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"
myst-parser = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ultralytics.*",
    "segment_anything.*",
    "open3d.*",
    "trimesh.*",
    "pymeshlab.*",
    "cv2.*",
    "mediapipe.*",
    "decord.*",
    "moviepy.*",
    "whisper.*",
    "diffusers.*",
    "controlnet_aux.*",
    "deep_sort_realtime.*",
    "motmetrics.*",
    "lpips.*",
    "clip.*",
    "ray.*",
    "mlflow.*",
    "optuna.*",
    "horovod.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=annotateai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 