# IMPORTANT: These are template secrets with placeholder values.
# In production, use external secret management (AWS Secrets Manager, HashiCorp Vault, etc.)
# and tools like External Secrets Operator to populate these values.

apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: annotateai
  labels:
    app: postgres
    component: database
type: Opaque
data:
  # Base64 encoded values - replace with actual secrets
  POSTGRES_USER: YW5ub3RhdGVhaQ==  # annotateai
  POSTGRES_PASSWORD: c3VwZXJfc2VjdXJlX3Bhc3N3b3JkXzEyMw==  # super_secure_password_123
  POSTGRES_DB: YW5ub3RhdGVhaQ==  # annotateai
  DATABASE_URL: cG9zdGdyZXNxbDovL2Fubm90YXRlYWk6c3VwZXJfc2VjdXJlX3Bhc3N3b3JkXzEyM0Bwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvYW5ub3RhdGVhaQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: annotateai
  labels:
    app: redis
    component: cache
type: Opaque
data:
  # Base64 encoded values
  REDIS_PASSWORD: cmVkaXNfc2VjdXJlX3Bhc3N3b3JkXzQ1Ng==  # redis_secure_password_456
  REDIS_URL: cmVkaXM6Ly86cmVkaXNfc2VjdXJlX3Bhc3N3b3JkXzQ1NkByZWRpcy1zZXJ2aWNlOjYzNzk=
---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secrets
  namespace: annotateai
  labels:
    app: enterprise-services
    component: auth
type: Opaque
data:
  # Base64 encoded JWT secrets
  JWT_SECRET_KEY: and0X3NlY3JldF9rZXlfZm9yX2p3dF90b2tlbl9zaWduaW5nXzc4OQ==
  JWT_REFRESH_SECRET: and0X3JlZnJlc2hfc2VjcmV0X2tleV9mb3JfcmVmcmVzaF90b2tlbnNfOTEy
  ENCRYPTION_KEY: ZW5jcnlwdGlvbl9rZXlfZm9yX2RhdGFfZW5jcnlwdGlvbl8zNDU=
---
apiVersion: v1
kind: Secret
metadata:
  name: oauth-secrets
  namespace: annotateai
  labels:
    app: enterprise-services
    component: sso
type: Opaque
data:
  # OAuth2 and SAML secrets
  GOOGLE_CLIENT_ID: Z29vZ2xlX2NsaWVudF9pZF9leGFtcGxl
  GOOGLE_CLIENT_SECRET: Z29vZ2xlX2NsaWVudF9zZWNyZXRfZXhhbXBsZQ==
  MICROSOFT_CLIENT_ID: bWljcm9zb2Z0X2NsaWVudF9pZF9leGFtcGxl
  MICROSOFT_CLIENT_SECRET: bWljcm9zb2Z0X2NsaWVudF9zZWNyZXRfZXhhbXBsZQ==
  OKTA_CLIENT_ID: b2t0YV9jbGllbnRfaWRfZXhhbXBsZQ==
  OKTA_CLIENT_SECRET: b2t0YV9jbGllbnRfc2VjcmV0X2V4YW1wbGU=
  SAML_PRIVATE_KEY: c2FtbF9wcml2YXRlX2tleV9wZW1fZm9ybWF0
  SAML_CERTIFICATE: c2FtbF9jZXJ0aWZpY2F0ZV9wZW1fZm9ybWF0
---
apiVersion: v1
kind: Secret
metadata:
  name: cloud-storage-secrets
  namespace: annotateai
  labels:
    app: storage
    component: object-storage
type: Opaque
data:
  # AWS S3 credentials
  AWS_ACCESS_KEY_ID: QVdTX0FDQ0VTU19LRVlfSURfRVhBTVBMRQ==
  AWS_SECRET_ACCESS_KEY: QVdTX1NFQ1JFVF9BQ0NFU1NfS0VZX0VYQU1QTEU=
  AWS_REGION: dXMtd2VzdC0y  # us-west-2
  S3_BUCKET: YW5ub3RhdGVhaS1kYXRh  # annotateai-data
  
  # Azure Storage credentials
  AZURE_STORAGE_ACCOUNT: YW5ub3RhdGVhaXN0b3JhZ2U=
  AZURE_STORAGE_KEY: YXp1cmVfc3RvcmFnZV9hY2NvdW50X2tleV9leGFtcGxl
  AZURE_CONTAINER: YW5ub3RhdGVhaS1jb250YWluZXI=
  
  # Google Cloud Storage credentials
  GCS_BUCKET: YW5ub3RhdGVhaS1nY3M=
  GCS_PROJECT_ID: YW5ub3RhdGVhaS1wcm9qZWN0
  GCS_SERVICE_ACCOUNT_KEY: Z2NzX3NlcnZpY2VfYWNjb3VudF9rZXlfanNvbl9mb3JtYXQ=
  
  # MinIO credentials
  MINIO_ACCESS_KEY: bWluaW9fYWNjZXNzX2tleQ==
  MINIO_SECRET_KEY: bWluaW9fc2VjcmV0X2tleQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: annotateai
  labels:
    app: monitoring
    component: observability
type: Opaque
data:
  # Datadog API keys
  DATADOG_API_KEY: ZGF0YWRvZ19hcGlfa2V5X2V4YW1wbGU=
  DATADOG_APP_KEY: ZGF0YWRvZ19hcHBfa2V5X2V4YW1wbGU=
  
  # New Relic license key
  NEW_RELIC_LICENSE_KEY: bmV3X3JlbGljX2xpY2Vuc2Vfa2V5X2V4YW1wbGU=
  
  # Elasticsearch credentials
  ELASTICSEARCH_USERNAME: ZWxhc3RpYw==  # elastic
  ELASTICSEARCH_PASSWORD: ZWxhc3RpY19wYXNzd29yZA==
  
  # InfluxDB credentials
  INFLUXDB_USERNAME: aW5mbHV4ZGI=  # influxdb
  INFLUXDB_PASSWORD: aW5mbHV4ZGJfcGFzc3dvcmQ=
  INFLUXDB_TOKEN: aW5mbHV4ZGJfdG9rZW5fZXhhbXBsZQ==
  
  # Grafana admin credentials
  GRAFANA_ADMIN_USER: YWRtaW4=  # admin
  GRAFANA_ADMIN_PASSWORD: Z3JhZmFuYV9hZG1pbl9wYXNzd29yZA==
---
apiVersion: v1
kind: Secret
metadata:
  name: cdn-secrets
  namespace: annotateai
  labels:
    app: performance
    component: cdn
type: Opaque
data:
  # Cloudflare API credentials
  CLOUDFLARE_API_TOKEN: Y2xvdWRmbGFyZV9hcGlfdG9rZW5fZXhhbXBsZQ==
  CLOUDFLARE_ZONE_ID: Y2xvdWRmbGFyZV96b25lX2lkX2V4YW1wbGU=
  CLOUDFLARE_EMAIL: Y2xvdWRmbGFyZV9lbWFpbEBleGFtcGxlLmNvbQ==
  
  # AWS CloudFront credentials
  CLOUDFRONT_DISTRIBUTION_ID: Y2xvdWRmcm9udF9kaXN0cmlidXRpb25faWRfZXhhbXBsZQ==
  CLOUDFRONT_ACCESS_KEY_ID: Y2xvdWRmcm9udF9hY2Nlc3Nfa2V5X2lkX2V4YW1wbGU=
  CLOUDFRONT_SECRET_ACCESS_KEY: Y2xvdWRmcm9udF9zZWNyZXRfYWNjZXNzX2tleV9leGFtcGxl
  
  # TinyPNG API key for image optimization
  TINIFY_API_KEY: dGluaWZ5X2FwaV9rZXlfZXhhbXBsZQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: ai-api-keys
  namespace: annotateai
  labels:
    app: ai-services
    component: external-apis
type: Opaque
data:
  # OpenAI API key
  OPENAI_API_KEY: b3BlbmFpX2FwaV9rZXlfZXhhbXBsZQ==
  
  # Anthropic API key
  ANTHROPIC_API_KEY: YW50aHJvcGljX2FwaV9rZXlfZXhhbXBsZQ==
  
  # Google AI API key
  GOOGLE_AI_API_KEY: Z29vZ2xlX2FpX2FwaV9rZXlfZXhhbXBsZQ==
  
  # Azure OpenAI credentials
  AZURE_OPENAI_API_KEY: YXp1cmVfb3BlbmFpX2FwaV9rZXlfZXhhbXBsZQ==
  AZURE_OPENAI_ENDPOINT: YXp1cmVfb3BlbmFpX2VuZHBvaW50X2V4YW1wbGU=
  
  # Hugging Face API token
  HUGGINGFACE_API_TOKEN: aHVnZ2luZ2ZhY2VfYXBpX3Rva2VuX2V4YW1wbGU=
---
apiVersion: v1
kind: Secret
metadata:
  name: notification-secrets
  namespace: annotateai
  labels:
    app: notifications
    component: messaging
type: Opaque
data:
  # Slack webhook URLs
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvVC9CL2V4YW1wbGU=
  SLACK_BOT_TOKEN: c2xhY2tfYm90X3Rva2VuX2V4YW1wbGU=
  
  # Email SMTP credentials
  SMTP_HOST: c210cC5nbWFpbC5jb20=  # smtp.gmail.com
  SMTP_PORT: NTg3  # 587
  SMTP_USERNAME: ZW1haWxAdXNlcm5hbWUuY29t
  SMTP_PASSWORD: ZW1haWxfcGFzc3dvcmQ=
  
  # SendGrid API key
  SENDGRID_API_KEY: c2VuZGdyaWRfYXBpX2tleV9leGFtcGxl
  
  # Twilio credentials (for SMS)
  TWILIO_ACCOUNT_SID: dHdpbGlvX2FjY291bnRfc2lkX2V4YW1wbGU=
  TWILIO_AUTH_TOKEN: dHdpbGlvX2F1dGhfdG9rZW5fZXhhbXBsZQ==
  TWILIO_PHONE_NUMBER: KzE1NTU1NTU1NTU1
---
apiVersion: v1
kind: Secret
metadata:
  name: license-keys
  namespace: annotateai
  labels:
    app: licensing
    component: software-licenses
type: Opaque
data:
  # Software license keys
  NVIDIA_NGC_API_KEY: bnZpZGlhX25nY19hcGlfa2V5X2V4YW1wbGU=
  DOCKER_HUB_TOKEN: ZG9ja2VyX2h1Yl90b2tlbl9leGFtcGxl
  
  # Commercial ML framework licenses
  PYTORCH_LICENSE: cHl0b3JjaF9saWNlbnNlX2tleQ==
  TENSORFLOW_LICENSE: dGVuc29yZmxvd19saWNlbnNlX2tleQ==
  
  # Enterprise software licenses
  ENTERPRISE_LICENSE_KEY: ZW50ZXJwcmlzZV9saWNlbnNlX2tleV9leGFtcGxl
  FEATURE_FLAGS_KEY: ZmVhdHVyZV9mbGFnc19rZXlfZXhhbXBsZQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-secrets
  namespace: annotateai
  labels:
    app: webhooks
    component: integrations
type: Opaque
data:
  # GitHub webhook secret
  GITHUB_WEBHOOK_SECRET: Z2l0aHViX3dlYmhvb2tfc2VjcmV0X2V4YW1wbGU=
  
  # Stripe webhook secret
  STRIPE_WEBHOOK_SECRET: c3RyaXBlX3dlYmhvb2tfc2VjcmV0X2V4YW1wbGU=
  STRIPE_API_KEY: c3RyaXBlX2FwaV9rZXlfZXhhbXBsZQ==
  
  # General webhook signing key
  WEBHOOK_SIGNING_KEY: d2ViaG9va19zaWduaW5nX2tleV9leGFtcGxl
---
apiVersion: v1
kind: Secret
metadata:
  name: backup-secrets
  namespace: annotateai
  labels:
    app: backup
    component: disaster-recovery
type: Opaque
data:
  # Backup encryption key
  BACKUP_ENCRYPTION_KEY: YmFja3VwX2VuY3J5cHRpb25fa2V5X2V4YW1wbGU=
  
  # Remote backup storage credentials
  BACKUP_S3_ACCESS_KEY: YmFja3VwX3MzX2FjY2Vzc19rZXlfZXhhbXBsZQ==
  BACKUP_S3_SECRET_KEY: YmFja3VwX3MzX3NlY3JldF9rZXlfZXhhbXBsZQ==
  BACKUP_S3_BUCKET: YW5ub3RhdGVhaS1iYWNrdXBz
  
  # Database backup credentials
  DB_BACKUP_PASSWORD: ZGJfYmFja3VwX3Bhc3N3b3JkX2V4YW1wbGU=
---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: annotateai
  labels:
    app: ssl
    component: certificates
type: kubernetes.io/tls
data:
  # TLS certificate and private key (base64 encoded)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBZT1VSIENFUlRJRklDQVRFIEhFUkUgLi4uCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLiBZT1VSIFBSSVZBVEUgS0VZIEhFUkUgLi4uCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
apiVersion: v1
kind: Secret
metadata:
  name: container-registry-secrets
  namespace: annotateai
  labels:
    app: container-registry
    component: docker
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5naXRsYWIuY29tIjp7InVzZXJuYW1lIjoiYW5ub3RhdGVhaSIsInBhc3N3b3JkIjoiZG9ja2VyX3JlZ2lzdHJ5X3Bhc3N3b3JkIiwiYXV0aCI6ImJHbDNhWGhsYWpJNlkyTjBOamM0T1dSaE9HTm1ZVEF4Wm1Ga1ptWTFObU0xWTJNNE9URT0ifX19
---
# Service account for external secrets operator (if using)
apiVersion: v1
kind: Secret
metadata:
  name: external-secrets-sa
  namespace: annotateai
  labels:
    app: external-secrets
    component: service-account
type: Opaque
data:
  # AWS IAM role credentials for External Secrets Operator
  AWS_ROLE_ARN: YXJuOmF3czppYW06OjEyMzQ1Njc4OTA6cm9sZS9leHRlcm5hbC1zZWNyZXRzLXJvbGU=
  
  # HashiCorp Vault credentials
  VAULT_TOKEN: aHZzLjEyMzQ1Njc4OTA=
  VAULT_ADDR: aHR0cHM6Ly92YXVsdC5leGFtcGxlLmNvbTo4MjAw
  
  # Azure Key Vault credentials
  AZURE_CLIENT_ID: YXp1cmVfY2xpZW50X2lkX2V4YW1wbGU=
  AZURE_CLIENT_SECRET: YXp1cmVfY2xpZW50X3NlY3JldF9leGFtcGxl
  AZURE_TENANT_ID: YXp1cmVfdGVuYW50X2lkX2V4YW1wbGU= 